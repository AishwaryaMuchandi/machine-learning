from scipy.spatial import distance
def euc(a,b):
                return distance.euclidean(a,b)
import numpy as np
import random
class Ash():
            def fit(self,X_train,y_train):
                                            self.X_train=X_train
                                            self.y_train=y_train
            def predict(self,X_test):
                                            predictions=[]
                                            for row in X_test:
                                                                label=self.closest(row)
                                                                predictions.append(label)
                                            return(predictions)
            def closest(self,row):
                                    best_dist=euc(row,self.X_train[0])
                                    best_idx=0
                                    for i in range(len(self.X_train)):
                                                                        dist=euc(row,self.X_train[i])
                                                                        if dist<best_dist:
                                                                                            best_dist=dist
                                                                                            best_idx=i
                                    return (y_train[best_idx])
from sklearn.datasets import load_iris
iris=load_iris()
X=iris.data
y=iris.target
print(iris.feature_names)
print(iris.target_names)
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)
clf=Ash()
clf.fit(X_train,y_train)
predictions=clf.predict(X_test)
print(predictions)
from sklearn.metrics import accuracy_score
print(accuracy_score(y_test,predictions))
